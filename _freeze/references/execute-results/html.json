{
  "hash": "b969763a18ec1006eff26cfb1fb03d59",
  "result": {
    "markdown": "# References {.unnumbered}\n\n::: {.cell hash='references_cache/html/unnamed-chunk-1_b7e5cc7ff4375116545a9ce5d93b86c3'}\n\n:::\n\n```{=html}\n<style>\n  .data-prep h3 {display: none;}\n</style>\n```\n::: data-prep\n::: {.cell hash='references_cache/html/unnamed-chunk-2_bc7e94fcb91abb9fb5e3506b8bb4c304'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-3_da66e4a1828db18a799417cf27ada88b'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-4_1f1a560f7d10a2a5a4e72cc60e2a00ec'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-5_dd92d4385800192abe208889de321c5a'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-6_012b2855fe446b348c94acbffab2e150'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-7_71081d5914f149e577827d4ce4807112'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-8_48a02f53145826e22d5927a9d827f450'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-9_a981ac2a5bc8e28842d687f271dd0a95'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-10_9bbe87e4d7601e36c1eb5e4f95a964b3'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-11_5c042ba88131b1f5071a3da89692971f'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-12_5a278128b5d8965c2c7b3554fde09ced'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-13_5645b03b623a7d80cda442831919c763'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-14_e8356bf603b1b01a359c7b1992a9b774'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-15_e2fd35d992ba8789e53fcd3f60d9911f'}\n\n:::\n\n::: {.cell hash='references_cache/html/unnamed-chunk-16_aad4a2c52b776f1057db185287ae7f79'}\n\n:::\n:::\n\n```{=html}\n<script>\n\n// Add draft message\n// document.querySelector('.sidebar>.flex-shrink-0').insertAdjacentHTML('afterend', '<div class=\"callout callout-style-simple callout-important no-icon\"><div class=\"callout-body-container callout-body\"><p><b>This is the final draft for the defense.</b> Please do not share or cite without permission.</p></div></div>');\n\n// Add sidebar subtitle\ndocument.querySelector('.sidebar-header').insertAdjacentHTML('afterend', '<div class=\"sidebar-subtitle\"><b>Nathan Morse</b><br>Doctoral dissertation</div><div class=\"sidebar-subtitle\"><a href=\"MorseNathan-Dissertation.pdf\"><i class=\"bi bi-file-pdf\"></i>PDF version</a></div>');\n\n\n// Move website tools to the sidebar on the right\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    setTimeout(function() {\n        var sidebarToolsMain = document.querySelector('.sidebar-tools-main');\n        var toc = document.querySelector('#TOC');\n\n        if(sidebarToolsMain && toc) {\n            toc.appendChild(sidebarToolsMain);\n        }\n    }, 1000); // Adjust timeout as needed\n});\n\n\n// Change menu icon\ndocument.querySelectorAll('.bi-layout-text-sidebar-reverse').forEach(element => {\n  element.classList.remove('bi-layout-text-sidebar-reverse');\n  element.classList.add('bi-list');\n});\n\n\n// Update the ellipsis link when quotes are expanded\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Listen for click events on the document\n  document.body.addEventListener('click', function(event) {\n    // Check if the clicked element is a link inside a blockquote\n    if (event.target.closest('blockquote') && event.target.matches('blockquote .ellipsis')) {\n      const link = event.target;\n      if (link.textContent === '(Show less)') {\n        link.textContent = '...';\n      } else {\n        link.textContent = '(Show less)';\n      }\n    }\n  });\n});\n\n\n// Initialize tooltips for ellipses\ndocument.addEventListener('DOMContentLoaded', function() {\n    const tooltipLinks = document.querySelectorAll('.ellipsis');\n\n    tooltipLinks.forEach(link => {\n        // Initialize tooltip\n        new bootstrap.Tooltip(link);\n\n        // Initialize collapse\n        link.addEventListener('click', function(event) {\n            event.preventDefault();\n            const target = document.querySelector(link.getAttribute('href'));\n            const bsCollapse = new bootstrap.Collapse(target, {\n                toggle: true\n            });\n        });\n    });\n});\n\n\n// Add translate buttons to quotes and switch between original and modern translations\ndocument.addEventListener('DOMContentLoaded', function() {\n  const blockquotes = document.querySelectorAll('.blockquote');\n\n  blockquotes.forEach(blockquote => {\n    const quoteOrig = blockquote.querySelector('.quote-orig');\n    const quoteModern = blockquote.querySelector('.quote-modern');\n\n    // Create and append the .show-modern link to .quote-orig\n    const showModernLink = document.createElement('a');\n    showModernLink.className = 'show-modern';\n    showModernLink.innerHTML = '<i class=\"bi bi-translate\"></i>';\n    showModernLink.setAttribute('data-bs-toggle', 'tooltip');\n    showModernLink.setAttribute('data-bs-title', 'Modern translation');\n    quoteOrig.appendChild(showModernLink);\n\n    // Create and append the .show-orig link to .quote-modern\n    const showOrigLink = document.createElement('a');\n    showOrigLink.className = 'show-orig';\n    showOrigLink.innerHTML = '<i class=\"bi bi-arrow-return-left\"></i>';\n    showOrigLink.setAttribute('data-bs-toggle', 'tooltip');\n    showOrigLink.setAttribute('data-bs-title', 'Original quote');\n    quoteModern.appendChild(showOrigLink);\n    \n    // Initialize tooltips for the newly added links\n    new bootstrap.Tooltip(showOrigLink);\n    new bootstrap.Tooltip(showModernLink);\n  });\n\n  document.body.addEventListener('click', function(event) {\n    const target = event.target;\n\n    const showOrigLink = target.closest('.show-orig');\n    const showModernLink = target.closest('.show-modern');\n\n    if (showOrigLink || showModernLink) {\n      event.preventDefault();\n\n      const blockquoteElem = target.closest('.blockquote');\n      const quoteOrig = blockquoteElem.querySelector('.quote-orig');\n      const quoteModern = blockquoteElem.querySelector('.quote-modern');\n\n      if (showOrigLink) {\n        quoteOrig.style.display = 'block';\n        quoteModern.style.display = 'none';\n      } else if (showModernLink) {\n        quoteOrig.style.display = 'none';\n        quoteModern.style.display = 'block';\n      }\n    }\n  });\n});\n\n\n// Footnote back buttons\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var footnotes = document.querySelectorAll('.footnote-back');\n    footnotes.forEach(function(footnote) {\n        footnote.innerHTML = '<i class=\"bi bi-arrow-return-left\"></i>';\n    });\n});\n  \n</script>\n```\n\n\n\n::: {#refs}\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}